-----  Stop and Wait Network Simulator Version 1.1 -------- 

Enter the number of packets to simulate: Do you want to show crc steps? (Yes = 1, No = 0): Do you want to enable piggybacking? (Yes = 1, No = 0): Enter generator polynomial (just type the divisor in binary): Enter frame loss probability [enter 0.0 for no loss]:Enter frame corruption probability [0.0 for no corruption]:Enter average time between packets from sender's layer3 [ > 0.0]:Enter TRACE:
EVENT time: 46.784874,  type: 1, fromlayer3  entity: 1
B_output(): ENTERING.
B_output(): Calculating CRC code and copying packet to payload.
generateCRC(): ENTERING.
generateCRC(): Copy the first 4 bits of data to the toXOR variable.
generateCRC(): XOR the toXOR variable with divisor if MSB of the toXOR variable is 1.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): XOR the toXOR variable with divisor if MSB of the toXOR variable is 1.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Copy the generated CRC code to the last 4-1 bits of the data.
generateCRC(): EXITING.
B_output(): Calculated CRC code and copied packet to payload.
B_output(): Starting timer.
B_output(): Started timer.
B_output(): CRC Payload = 1110010
B_output(): Transmitting frame.
          TOlayer1: frame being corrupted
B_output(): Transmitted frame.
B_output(): EXITING.

EVENT time: 50.875423,  type: 2, fromlayer1  entity: 1
B_input(): ENTERING.
B_input(): Checking validity of CRC code.
validateCRC(): ENTERING.
validateCRC(): Copy the first 4 bits of data to the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): XOR the toXOR variable with divisor if MSB of the toXOR variable is 1.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Check if calculated CRC code is composed only of 0s.
B_input(): CRC code is invalid.
B_input(): CRC Payload = 0110010
B_input(): Ignoring frame.
B_input(): EXITING.

EVENT time: 61.784874,  type: 0, timerinterrupt   entity: 0
A_timerinterrupt(): ENTERING.
A_timerinterrupt(): EXITING.

EVENT time: 668.660522,  type: 1, fromlayer3  entity: 0
A_output(): ENTERING.
A_output(): Calculating CRC code and copying packet to payload.
generateCRC(): ENTERING.
generateCRC(): Copy the first 4 bits of data to the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Copy the generated CRC code to the last 4-1 bits of the data.
generateCRC(): EXITING.
A_output(): Calculated CRC code and copied packet to payload.
A_output(): Starting timer.
A_output(): Started timer.
A_output(): CRC Payload = 0000000
A_output(): Transmitting frame.
A_output(): Transmitted frame.
A_output(): EXITING.

EVENT time: 672.874939,  type: 2, fromlayer1  entity: 1
B_input(): ENTERING.
B_input(): Checking validity of CRC code.
validateCRC(): ENTERING.
validateCRC(): Copy the first 4 bits of data to the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Check if calculated CRC code is composed only of 0s.
B_input(): CRC code is valid.
B_input(): Discovered Data frame.
B_input(): CRC Payload = 0000000
B_input(): Transmitting Ack.
B_input(): Calculating CRC code.
generateCRC(): ENTERING.
generateCRC(): Copy the first 4 bits of data to the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Copy the generated CRC code to the last 4-1 bits of the data.
generateCRC(): EXITING.
B_input(): Calculated CRC code.
          TOlayer1: frame being corrupted
B_input(): Transmitted Ack.
B_input(): EXITING.

EVENT time: 678.267700,  type: 2, fromlayer1  entity: 0
A_input(): ENTERING.
A_input(): Checking validity of CRC code.
validateCRC(): ENTERING.
validateCRC(): Copy the first 4 bits of data to the toXOR variable.
validateCRC(): XOR the toXOR variable with divisor if MSB of the toXOR variable is 1.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): XOR the toXOR variable with divisor if MSB of the toXOR variable is 1.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): XOR the toXOR variable with divisor if MSB of the toXOR variable is 1.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Check if calculated CRC code is composed only of 0s.
A_input(): CRC code is invalid.
A_input(): CRC Payload = 1000000
A_inpit(): Ignoring frame.
A_input(): EXITING.

EVENT time: 683.660522,  type: 0, timerinterrupt   entity: 0
A_timerinterrupt(): ENTERING.
A_timerinterrupt(): Have not received acknowledgement for 0 yet.
A_timerinterrupt(): Retransmitting packet.
A_timerinterrupt(): CRC Payload = 0000000
A_timerinterrupt(): Retransmitted packet.
A_timerinterrupt(): EXITING.

EVENT time: 692.873047,  type: 2, fromlayer1  entity: 1
B_input(): ENTERING.
B_input(): Checking validity of CRC code.
validateCRC(): ENTERING.
validateCRC(): Copy the first 4 bits of data to the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Check if calculated CRC code is composed only of 0s.
B_input(): CRC code is valid.
B_input(): Discovered Data frame.
B_input(): CRC Payload = 0000000
B_input(): Transmitting Ack.
B_input(): Calculating CRC code.
generateCRC(): ENTERING.
generateCRC(): Copy the first 4 bits of data to the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Copy the generated CRC code to the last 4-1 bits of the data.
generateCRC(): EXITING.
B_input(): Calculated CRC code.
          TOlayer1: frame being corrupted
B_input(): Transmitted Ack.
B_input(): EXITING.

EVENT time: 696.369202,  type: 2, fromlayer1  entity: 0
A_input(): ENTERING.
A_input(): Checking validity of CRC code.
validateCRC(): ENTERING.
validateCRC(): Copy the first 4 bits of data to the toXOR variable.
validateCRC(): XOR the toXOR variable with divisor if MSB of the toXOR variable is 1.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): XOR the toXOR variable with divisor if MSB of the toXOR variable is 1.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): XOR the toXOR variable with divisor if MSB of the toXOR variable is 1.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Check if calculated CRC code is composed only of 0s.
A_input(): CRC code is invalid.
A_input(): CRC Payload = 1000000/i*F
A_inpit(): Ignoring frame.
A_input(): EXITING.

EVENT time: 698.660522,  type: 0, timerinterrupt   entity: 0
A_timerinterrupt(): ENTERING.
A_timerinterrupt(): Have not received acknowledgement for 0 yet.
A_timerinterrupt(): Retransmitting packet.
A_timerinterrupt(): CRC Payload = 0000000
A_timerinterrupt(): Retransmitted packet.
A_timerinterrupt(): EXITING.

EVENT time: 701.545532,  type: 2, fromlayer1  entity: 1
B_input(): ENTERING.
B_input(): Checking validity of CRC code.
validateCRC(): ENTERING.
validateCRC(): Copy the first 4 bits of data to the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Check if calculated CRC code is composed only of 0s.
B_input(): CRC code is valid.
B_input(): Discovered Data frame.
B_input(): CRC Payload = 0000000
B_input(): Transmitting Ack.
B_input(): Calculating CRC code.
generateCRC(): ENTERING.
generateCRC(): Copy the first 4 bits of data to the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Copy the generated CRC code to the last 4-1 bits of the data.
generateCRC(): EXITING.
B_input(): Calculated CRC code.
          TOlayer1: frame being corrupted
B_input(): Transmitted Ack.
B_input(): EXITING.

EVENT time: 708.431885,  type: 2, fromlayer1  entity: 0
A_input(): ENTERING.
A_input(): Checking validity of CRC code.
validateCRC(): ENTERING.
validateCRC(): Copy the first 4 bits of data to the toXOR variable.
validateCRC(): XOR the toXOR variable with divisor if MSB of the toXOR variable is 1.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): XOR the toXOR variable with divisor if MSB of the toXOR variable is 1.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): XOR the toXOR variable with divisor if MSB of the toXOR variable is 1.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Check if calculated CRC code is composed only of 0s.
A_input(): CRC code is invalid.
A_input(): CRC Payload = 10000005i F 
A_inpit(): Ignoring frame.
A_input(): EXITING.

EVENT time: 713.660522,  type: 0, timerinterrupt   entity: 0
A_timerinterrupt(): ENTERING.
A_timerinterrupt(): Have not received acknowledgement for 0 yet.
A_timerinterrupt(): Retransmitting packet.
A_timerinterrupt(): CRC Payload = 0000000
A_timerinterrupt(): Retransmitted packet.
A_timerinterrupt(): EXITING.

EVENT time: 718.491028,  type: 2, fromlayer1  entity: 1
B_input(): ENTERING.
B_input(): Checking validity of CRC code.
validateCRC(): ENTERING.
validateCRC(): Copy the first 4 bits of data to the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Check if calculated CRC code is composed only of 0s.
B_input(): CRC code is valid.
B_input(): Discovered Data frame.
B_input(): CRC Payload = 0000000
B_input(): Transmitting Ack.
B_input(): Calculating CRC code.
generateCRC(): ENTERING.
generateCRC(): Copy the first 4 bits of data to the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Copy the generated CRC code to the last 4-1 bits of the data.
generateCRC(): EXITING.
B_input(): Calculated CRC code.
          TOlayer1: frame being corrupted
B_input(): Transmitted Ack.
B_input(): EXITING.

EVENT time: 722.588989,  type: 2, fromlayer1  entity: 0
A_input(): ENTERING.
A_input(): Checking validity of CRC code.
validateCRC(): ENTERING.
validateCRC(): Copy the first 4 bits of data to the toXOR variable.
validateCRC(): XOR the toXOR variable with divisor if MSB of the toXOR variable is 1.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): XOR the toXOR variable with divisor if MSB of the toXOR variable is 1.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): XOR the toXOR variable with divisor if MSB of the toXOR variable is 1.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Check if calculated CRC code is composed only of 0s.
A_input(): CRC code is invalid.
A_input(): CRC Payload = 1000000;i>F
A_inpit(): Ignoring frame.
A_input(): EXITING.

EVENT time: 728.660522,  type: 0, timerinterrupt   entity: 0
A_timerinterrupt(): ENTERING.
A_timerinterrupt(): Have not received acknowledgement for 0 yet.
A_timerinterrupt(): Retransmitting packet.
A_timerinterrupt(): CRC Payload = 0000000
          TOlayer1: frame being corrupted
A_timerinterrupt(): Retransmitted packet.
A_timerinterrupt(): EXITING.

EVENT time: 732.658203,  type: 2, fromlayer1  entity: 1
B_input(): ENTERING.
B_input(): Checking validity of CRC code.
validateCRC(): ENTERING.
validateCRC(): Copy the first 4 bits of data to the toXOR variable.
validateCRC(): XOR the toXOR variable with divisor if MSB of the toXOR variable is 1.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): XOR the toXOR variable with divisor if MSB of the toXOR variable is 1.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): XOR the toXOR variable with divisor if MSB of the toXOR variable is 1.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Check if calculated CRC code is composed only of 0s.
B_input(): CRC code is invalid.
B_input(): CRC Payload = 1000000
B_input(): Ignoring frame.
B_input(): EXITING.

EVENT time: 743.660522,  type: 0, timerinterrupt   entity: 0
A_timerinterrupt(): ENTERING.
A_timerinterrupt(): Have not received acknowledgement for 0 yet.
A_timerinterrupt(): Retransmitting packet.
A_timerinterrupt(): CRC Payload = 0000000
A_timerinterrupt(): Retransmitted packet.
A_timerinterrupt(): EXITING.

EVENT time: 749.608093,  type: 2, fromlayer1  entity: 1
B_input(): ENTERING.
B_input(): Checking validity of CRC code.
validateCRC(): ENTERING.
validateCRC(): Copy the first 4 bits of data to the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Check if calculated CRC code is composed only of 0s.
B_input(): CRC code is valid.
B_input(): Discovered Data frame.
B_input(): CRC Payload = 0000000
B_input(): Transmitting Ack.
B_input(): Calculating CRC code.
generateCRC(): ENTERING.
generateCRC(): Copy the first 4 bits of data to the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Shift the toXOR variable 1 bit to the left.
generateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
generateCRC(): Copy the generated CRC code to the last 4-1 bits of the data.
generateCRC(): EXITING.
B_input(): Calculated CRC code.
B_input(): Transmitted Ack.
B_input(): EXITING.

EVENT time: 751.805908,  type: 2, fromlayer1  entity: 0
A_input(): ENTERING.
A_input(): Checking validity of CRC code.
validateCRC(): ENTERING.
validateCRC(): Copy the first 4 bits of data to the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Shift the toXOR variable 1 bit to the left.
validateCRC(): Copy the next bit of data to the LSB of the toXOR variable.
validateCRC(): Check if calculated CRC code is composed only of 0s.
A_input(): CRC code is valid.
A_input(): Discovered Ack frame.
A_input(): Stopping timer.
A_input(): Stopped timer.
A_input(): EXITING.
 Simulator terminated at time 751.805908
 after sending 2 pkts from layer3
